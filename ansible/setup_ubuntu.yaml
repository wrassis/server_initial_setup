---
- hosts: all
  become: true
  vars:
    created_username: sysadmin
    root_user: root

  tasks:
    - name: Install aptitude
      ansible.builtin.apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Setup passwordless sudo
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    - name: Create a new regular user with sudo privileges
      ansible.builtin.user:
        name: "{{ created_username }}"
        state: present
        groups: sudo
        append: true
        create_home: true

    - name: Set authorized key for remote user
      ansible.posix.authorized_key:
        user: "{{ created_username }}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

    - name: Disable password authentication for root
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'

    - name: Update apt and install required system packages
      ansible.builtin.apt:
        pkg:
          - curl
          - vim
          - git
          - ufw
        state: latest
        update_cache: true
  
    - name: Config .vimrc to /home/{{ created_username }}/ and backup .vimrc
      ansible.builtin.copy:
        src: ../files/.vimrc
        dest: /home/{{ created_username }}/.vimrc
        backup: yes 
      tags:
        - vimrc
        
    - name: Config .vimrc to /{{ root_user }}/ and backup .vimrc
      ansible.builtin.copy:
        src: ../files/.vimrc
        dest: /{{ root_user }}/.vimrc
        backup: yes 
      tags:
        - vimrc
        
    - name: Config .bashrc to /{{ created_username }}/ and backup .bashrc
      ansible.builtin.copy:
        src: ../files/.bashrc
        dest: /home/{{ created_username }}/.bashrc
        backup: yes 
      tags:
       - bashrc

    - name: Config .bashrc to /home/{{ root_user }}/ and backup .bashrc
      ansible.builtin.copy:
        src: ../files/.bashrc_root
        dest: /{{ root_user }}/.bashrc
        backup: yes 
      tags:
       - bashrc_root

    - name: Config ssh banner file and backup original issue file
      ansible.builtin.copy:
        src: ../files/issue
        dest: /etc/issue
        backup: yes 
      tags:
       - ssh_issue

    - name: Config ssh banner file and backup original issue.net file
      ansible.builtin.copy:
        src: ../files/issue.net
        dest: /etc/issue.net
        backup: yes 
      tags:
       - ssh_issue.net

    - name: Config motd file and backup original motd file
      ansible.builtin.copy:
        src: ../files/motd
        dest: /etc/motd
        backup: yes 
      tags:
       - motd      

    - name: Config ssh banner message
      ansible.builtin.lineinfile:
        # ansible.builtin.replace module -> l1nq.com/1XpHT
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#Banner none'
        line: 'Banner /etc/issue.net'

    - name: Add Ansible inventory mappings to /etc/hosts
      ansible.builtin.blockinfile:
        path: /etc/hosts
        block: |
          {% for host in groups ['all'] %}
          {{ hostvars[host].ansible_host }} {{ host }}
          {% endfor %}
      tags: gen_etc/hosts

    - name: UFW - Allow SSH connections
      community.general.ufw:
        rule: allow
        name: OpenSSH

    - name: UFW - Enable and deny by default
      community.general.ufw:
        state: enabled
        default: deny
...
